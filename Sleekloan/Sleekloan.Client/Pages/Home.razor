@page "/"
@using LoanApp.Application.DTOs
@using SleekLoan.Domain.Interfaces
@inject ILoanApplicationService loanServices
@inject NavigationManager nav
@attribute [StreamRendering]

<PageTitle>Load Applications</PageTitle>

<div class="d-flex justify-content-between align-items-center mb-3">
    <h3>Loan Applications</h3>
    <button class="btn btn-primary" @onclick="OnAddNewApplication">New Application</button>
</div>

@if (loanApplications is null || !loanApplications.Any())
{
    <h4>No loan applications to view</h4>
}
else
{
    <table class="table table-striped">
        <thead>
            <tr>
                <th>ID</th>
                <th>Applicant Name</th>
                <th>Amount (NGN)</th>
                <th>Interest Rate</th>
                <th>Status</th>
                <th>Date Submitted</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var app in @loanApplications)
            {
                <tr>
                    <td>@app.Id</td>
                    <td>@app.ApplicantName</td>
                    <td>@app.LoanAmount</td>
                    <td>@app.InterestRate</td>
                    <td>@app.LoanStatus</td>
                    <td>@app.ApplicationDate.ToShortDateString()</td>
                    <td>
                        <div class="d-flex">
                            <button @onclick="() => EditLoanApplication(app.Id)" class="btn btn-link">edit</button>
                            <button @onclick="()=> DeleteLoanApplication(app.Id)" class="btn btn-link">del</button>
                        </div>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private LoanApplicationModel[]? loanApplications = Array.Empty<LoanApplicationModel>();

    protected override async Task OnInitializedAsync()
    {
        loanApplications = (await @loanServices.GetLoanApplications(1, 20)).Data.ToArray();
    }

    void OnAddNewApplication()
    {
        nav.NavigateTo("create");
    }
    private async void DeleteLoanApplication(int appId)
    {
        await loanServices.DeleteLoanApplicationById(appId);
    }
    private async void EditLoanApplication(int appId)
    {
        nav.NavigateTo($"edit/{appId}");
    }
}
